===== Running for dataset=census... =====
===== census Running for test_size=0.1... =====
===== Decision Tree (no pruning)... =====
DT Learning with no max_depth:
Accuracy: 0.8175989387574618
AUC: 0.754477594422666
===== Decision Tree (gridsearch for max_depth for pruning)... =====
Optimal max_depth=10
DT Learner with max_depth=10:
Accuracy: 0.8487729383152774
AUC: 0.7410222503905752
===== exporting output/plots/census_0.1_dt_with_pruning.png... =====
===== Neural Network (defaults)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.8023435772717223
AUC: 0.6489872433876095
===== Neural Network (max_iter=50)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.8023435772717223
AUC: 0.6489872433876095
===== Neural Network (max_iter=100)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.8023435772717223
AUC: 0.6489872433876095
===== Neural Network (max_iter=500)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.8023435772717223
AUC: 0.6489872433876095
===== Neural Network (max_iter=750)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.8023435772717223
AUC: 0.6489872433876095
===== Neural Network (grid search for hyperparameters)... =====
Optimal activation=logistic, alpha=0.001
NN Learner with activation=logistic and alpha=0.001:
Accuracy: 0.7946053504311298
AUC: 0.6252372792500958
===== AdaBoost (defaults)... =====
AdaBoost Learner with n_estimators=50:
Accuracy: 0.8611541012602255
AUC: 0.7749495969056542
===== AdaBoost (n_estimators=100)... =====
AdaBoost Learner with n_estimators=100:
Accuracy: 0.8688923281008181
AUC: 0.7922070165280418
===== AdaBoost (n_estimators=200)... =====
AdaBoost Learner with n_estimators=200:
Accuracy: 0.869334512491709
AUC: 0.7930919722802542
===== AdaBoost (n_estimators=300)... =====
AdaBoost Learner with n_estimators=300:
Accuracy: 0.8713243422507185
AUC: 0.7970742731652101
===== AdaBoost (n_estimators=400)... =====
AdaBoost Learner with n_estimators=400:
Accuracy: 0.8722087110325005
AUC: 0.7988441846696347
===== AdaBoost (n_estimators=500)... =====
AdaBoost Learner with n_estimators=500:
Accuracy: 0.8728719876188371
AUC: 0.8001716182979534
===== SVM (default rbf kernel - no max_iter limit)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.7501658191465841
AUC: 0.5
===== SVM (default rbf kernel and max_iter=50)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.4070307318151669
AUC: 0.502074286206114
===== SVM (default rbf kernel and max_iter=100)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.39708158302011937
AUC: 0.5119694634189599
===== SVM (default rbf kernel and max_iter=200)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.41742206500110546
AUC: 0.5036882284975053
===== SVM (default rbf kernel and max_iter=500)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.39199646252487286
AUC: 0.5133019829998774
===== SVM (default rbf kernel and max_iter=750)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.47689586557594515
AUC: 0.5270973034018502
===== SVM (sigmoid kernel - no max_iter limit)... =====
SVM Learner with kernel=sigmoid:
Accuracy: 0.6405040902056157
AUC: 0.5178039639132102
===== KNN (defaults)... =====
KNN Learner with n_neighbors=5:
Accuracy: 0.7755914216228167
AUC: 0.6420756946237569
===== KNN (grid search for K)... =====
KNN Learner with n_neighbors=17:
Accuracy: 0.7886358611541012
AUC: 0.598829709266084
===== finished test_size=0.1! =====
===== census Running for test_size=0.2... =====
===== Decision Tree (no pruning)... =====
DT Learning with no max_depth:
Accuracy: 0.8059701492537313
AUC: 0.7420467821128158
===== Decision Tree (gridsearch for max_depth for pruning)... =====
Optimal max_depth=10
DT Learner with max_depth=10:
Accuracy: 0.8454394693200663
AUC: 0.7387020227064638
===== exporting output/plots/census_0.2_dt_with_pruning.png... =====
===== Neural Network (defaults)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.7889441680486456
AUC: 0.5929717240806918
===== Neural Network (max_iter=50)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.7889441680486456
AUC: 0.5929717240806918
===== Neural Network (max_iter=100)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.7889441680486456
AUC: 0.5929717240806918
===== Neural Network (max_iter=500)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.7889441680486456
AUC: 0.5929717240806918
===== Neural Network (max_iter=750)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.7889441680486456
AUC: 0.5929717240806918
===== Neural Network (grid search for hyperparameters)... =====
Optimal activation=logistic, alpha=1e-05
NN Learner with activation=logistic and alpha=1e-05:
Accuracy: 0.8021006080707573
AUC: 0.6293244372630584
===== AdaBoost (defaults)... =====
AdaBoost Learner with n_estimators=50:
Accuracy: 0.8553897180762853
AUC: 0.771874394267545
===== AdaBoost (n_estimators=100)... =====
AdaBoost Learner with n_estimators=100:
Accuracy: 0.8606965174129353
AUC: 0.7808022012021936
===== AdaBoost (n_estimators=200)... =====
AdaBoost Learner with n_estimators=200:
Accuracy: 0.8647871752349364
AUC: 0.7901227000552087
===== AdaBoost (n_estimators=300)... =====
AdaBoost Learner with n_estimators=300:
Accuracy: 0.8658927584300719
AUC: 0.7920576951463135
===== AdaBoost (n_estimators=400)... =====
AdaBoost Learner with n_estimators=400:
Accuracy: 0.8676616915422886
AUC: 0.7959340545478327
===== AdaBoost (n_estimators=500)... =====
AdaBoost Learner with n_estimators=500:
Accuracy: 0.8677722498618021
AUC: 0.7955572856777401
===== SVM (default rbf kernel - no max_iter limit)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.7526810392482034
AUC: 0.5
===== SVM (default rbf kernel and max_iter=50)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.439469320066335
AUC: 0.5234949337785045
===== SVM (default rbf kernel and max_iter=100)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.44013266998341627
AUC: 0.5183829786619334
===== SVM (default rbf kernel and max_iter=200)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.448424543946932
AUC: 0.5216401448872635
===== SVM (default rbf kernel and max_iter=500)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.4353786622443339
AUC: 0.5182263418303534
===== SVM (default rbf kernel and max_iter=750)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.4551686014372582
AUC: 0.5166657189443432
===== SVM (sigmoid kernel - no max_iter limit)... =====
SVM Learner with kernel=sigmoid:
Accuracy: 0.6385848535102266
AUC: 0.5130486261659611
===== KNN (defaults)... =====
KNN Learner with n_neighbors=5:
Accuracy: 0.7701492537313432
AUC: 0.6262579536446906
===== KNN (grid search for K)... =====
KNN Learner with n_neighbors=14:
Accuracy: 0.7852957435046988
AUC: 0.5867963391565946
===== finished test_size=0.2! =====
===== finished dataset: census =====
===== Running for dataset=phishing... =====
===== phishing Running for test_size=0.1... =====
===== Decision Tree (no pruning)... =====
DT Learning with no max_depth:
Accuracy: 0.961121157323689
AUC: 0.9606031766867944
===== Decision Tree (gridsearch for max_depth for pruning)... =====
Optimal max_depth=100
DT Learner with max_depth=100:
Accuracy: 0.9593128390596745
AUC: 0.9587883959044369
===== exporting output/plots/phishing_0.1_dt_with_pruning.png... =====
===== Neural Network (defaults)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9556962025316456
AUC: 0.9562417957469153
===== Neural Network (max_iter=50)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9367088607594937
AUC: 0.9365909687582042
===== Neural Network (max_iter=100)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9547920433996383
AUC: 0.9543055920189026
===== Neural Network (max_iter=500)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9584086799276673
AUC: 0.9569604883171436
===== Neural Network (max_iter=750)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9584086799276673
AUC: 0.9569604883171436
===== Neural Network (grid search for hyperparameters)... =====
Optimal activation=relu, alpha=0.0001
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9556962025316456
AUC: 0.9562417957469153
===== AdaBoost (defaults)... =====
AdaBoost Learner with n_estimators=50:
Accuracy: 0.9285714285714286
AUC: 0.9273956419007613
===== AdaBoost (n_estimators=100)... =====
AdaBoost Learner with n_estimators=100:
Accuracy: 0.9276672694394213
AUC: 0.9267589918613809
===== AdaBoost (n_estimators=200)... =====
AdaBoost Learner with n_estimators=200:
Accuracy: 0.9276672694394213
AUC: 0.9268672880021003
===== AdaBoost (n_estimators=300)... =====
AdaBoost Learner with n_estimators=300:
Accuracy: 0.9285714285714286
AUC: 0.9278288264636388
===== AdaBoost (n_estimators=400)... =====
AdaBoost Learner with n_estimators=400:
Accuracy: 0.9285714285714286
AUC: 0.9278288264636388
===== AdaBoost (n_estimators=500)... =====
AdaBoost Learner with n_estimators=500:
Accuracy: 0.9285714285714286
AUC: 0.9278288264636388
===== SVM (default rbf kernel - no max_iter limit)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9448462929475587
AUC: 0.9435120766605408
===== SVM (default rbf kernel and max_iter=50)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.759493670886076
AUC: 0.767731031766868
===== SVM (default rbf kernel and max_iter=100)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.6726943942133815
AUC: 0.6860363612496718
===== SVM (default rbf kernel and max_iter=200)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.6338155515370705
AUC: 0.64100813861906
===== SVM (default rbf kernel and max_iter=500)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9367088607594937
AUC: 0.9341001575216591
===== SVM (default rbf kernel and max_iter=750)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9484629294755877
AUC: 0.9470333420845366
===== SVM (sigmoid kernel - no max_iter limit)... =====
SVM Learner with kernel=sigmoid:
Accuracy: 0.38788426763110306
AUC: 0.3832600420057758
===== KNN (defaults)... =====
KNN Learner with n_neighbors=5:
Accuracy: 0.9448462929475587
AUC: 0.9437286689419796
===== KNN (grid search for K)... =====
KNN Learner with n_neighbors=1:
Accuracy: 0.9584086799276673
AUC: 0.9581517458650565
===== finished test_size=0.1! =====
===== phishing Running for test_size=0.2... =====
===== Decision Tree (no pruning)... =====
DT Learning with no max_depth:
Accuracy: 0.95838986883763
AUC: 0.9579481665596112
===== Decision Tree (gridsearch for max_depth for pruning)... =====
Optimal max_depth=25
DT Learner with max_depth=25:
Accuracy: 0.9611035730438715
AUC: 0.9605597985277279
===== exporting output/plots/phishing_0.2_dt_with_pruning.png... =====
===== phishing Running for test_size=0.2... =====
===== Decision Tree (gridsearch for max_depth for pruning)... =====
Optimal max_depth=5
DT Learner with max_depth=5:
Accuracy: 0.5653550429669832
AUC: 0.540470233391762
===== exporting output/plots/phishing_0.2_fewer_features_dt_with_pruning.png... =====
===== Neural Network (defaults)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9561284486657621
AUC: 0.9564938830560571
===== Neural Network (max_iter=50)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9366802351876978
AUC: 0.9353108741471845
===== Neural Network (max_iter=100)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9502487562189055
AUC: 0.9497194107626015
===== Neural Network (max_iter=500)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9642695612844867
AUC: 0.9637661219708931
===== Neural Network (max_iter=750)... =====
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9642695612844867
AUC: 0.9637661219708931
===== Neural Network (grid search for hyperparameters)... =====
Optimal activation=relu, alpha=0.0001
NN Learner with activation=relu and alpha=0.0001:
Accuracy: 0.9561284486657621
AUC: 0.9564938830560571
===== AdaBoost (defaults)... =====
AdaBoost Learner with n_estimators=50:
Accuracy: 0.9308005427408412
AUC: 0.9294929187359027
===== AdaBoost (n_estimators=100)... =====
AdaBoost Learner with n_estimators=100:
Accuracy: 0.9308005427408412
AUC: 0.9294366530369514
===== AdaBoost (n_estimators=200)... =====
AdaBoost Learner with n_estimators=200:
Accuracy: 0.932157394843962
AUC: 0.9308831332683882
===== AdaBoost (n_estimators=300)... =====
AdaBoost Learner with n_estimators=300:
Accuracy: 0.932157394843962
AUC: 0.9308831332683882
===== AdaBoost (n_estimators=400)... =====
AdaBoost Learner with n_estimators=400:
Accuracy: 0.9317051108095884
AUC: 0.930457238890194
===== AdaBoost (n_estimators=500)... =====
AdaBoost Learner with n_estimators=500:
Accuracy: 0.9317051108095884
AUC: 0.930457238890194
===== SVM (default rbf kernel - no max_iter limit)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9461781999095432
AUC: 0.9449298444766797
===== SVM (default rbf kernel and max_iter=50)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.8055178652193578
AUC: 0.813039349847795
===== SVM (default rbf kernel and max_iter=100)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.8507462686567164
AUC: 0.8531530969133541
===== SVM (default rbf kernel and max_iter=200)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.6897331524197196
AUC: 0.6938262975198737
===== SVM (default rbf kernel and max_iter=500)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9493441881501583
AUC: 0.948023636521942
===== SVM (default rbf kernel and max_iter=750)... =====
SVM Learner with kernel=rbf:
Accuracy: 0.9466304839439168
AUC: 0.9452994731559226
===== SVM (sigmoid kernel - no max_iter limit)... =====
SVM Learner with kernel=sigmoid:
Accuracy: 0.3894165535956581
AUC: 0.3847563489886139
===== KNN (defaults)... =====
KNN Learner with n_neighbors=5:
Accuracy: 0.9511533242876526
AUC: 0.9500648082284272
===== KNN (grid search for K)... =====
KNN Learner with n_neighbors=1:
Accuracy: 0.9597467209407508
AUC: 0.9588882555004854
===== finished test_size=0.2! =====
===== finished dataset: phishing =====
===== Done with learners, generating plots... =====
